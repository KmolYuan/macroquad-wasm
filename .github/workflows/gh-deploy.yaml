name: Github Deploy
on:
  push:
    branches: [ main ]
    tags: [ v* ]
jobs:
  gh-test-release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: mq-example-linux-amd64
            artifact_name: mq-example
          - os: ubuntu-latest
            asset_name: mq-example-wasm-unknown
            artifact_name: docs/
          - os: macos-latest
            asset_name: mq-example-macos-amd64
            artifact_name: mq-example
          - os: windows-latest
            asset_name: mq-example-windows-amd64
            artifact_name: mq-example.exe
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - if: matrix.asset_name == 'mq-example-linux-amd64'
        name: Linux requirements
        run: |
          sudo apt update
          sudo apt install -y pkg-config libx11-dev libxi-dev libgl1-mesa-dev libasound2-dev
      - if: matrix.asset_name == 'mq-example-wasm-unknown'
        name: WASM Build
        run: |
          ./setup_web.sh
          ./build_web.sh
      - if: matrix.asset_name != 'mq-example-wasm-unknown'
        name: Cargo Clippy
        run: cargo clippy -- -D warnings
      - if: matrix.asset_name != 'mq-example-wasm-unknown'
        name: Cargo Build
        run: cargo build --release
      - if: matrix.asset_name != 'mq-example-wasm-unknown'
        name: Pack binaries
        uses: vimtor/action-zip@v1
        with:
          files: target/release/${{ matrix.artifact_name }}
          dest: ${{ matrix.asset_name }}.zip
      - if: matrix.asset_name == 'mq-example-wasm-unknown'
        name: Pack WASM
        uses: thedoctor0/zip-release@0.6.0
        with:
          type: zip
          directory: ${{ matrix.artifact_name }}
          filename: ../${{ matrix.asset_name }}.zip
      - if: matrix.asset_name != 'mq-example-wasm-unknown'
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: target/release/${{ matrix.artifact_name }}
          if-no-files-found: error
      - if: matrix.asset_name == 'mq-example-wasm-unknown'
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}
          if-no-files-found: error
      - if: startsWith(github.ref, 'refs/tags/v') && matrix.asset_name != 'mq-example-wasm-unknown'
        name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        with:
          files: ${{ matrix.asset_name }}.zip
      - if: startsWith(github.ref, 'refs/tags/v') && matrix.asset_name == 'mq-example-wasm-unknown'
        name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.asset_name }}.zip
      - if: github.ref == 'refs/heads/main' && matrix.asset_name == 'mq-example-wasm-unknown'
        name: Deploy to gh-pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.PUBLISH_TOKEN }}
          branch: gh-pages
          folder: ${{ matrix.artifact_name }}
          clean: true
